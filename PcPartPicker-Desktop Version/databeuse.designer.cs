#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PcPartPicker_Desktop_Version
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="projet")]
	public partial class databeuseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBUILD(BUILD instance);
    partial void UpdateBUILD(BUILD instance);
    partial void DeleteBUILD(BUILD instance);
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    partial void InsertCase(Case instance);
    partial void UpdateCase(Case instance);
    partial void DeleteCase(Case instance);
    partial void InsertCpu(Cpu instance);
    partial void UpdateCpu(Cpu instance);
    partial void DeleteCpu(Cpu instance);
    partial void InsertCpuCooler(CpuCooler instance);
    partial void UpdateCpuCooler(CpuCooler instance);
    partial void DeleteCpuCooler(CpuCooler instance);
    partial void InsertGpu(Gpu instance);
    partial void UpdateGpu(Gpu instance);
    partial void DeleteGpu(Gpu instance);
    partial void InsertMemory(Memory instance);
    partial void UpdateMemory(Memory instance);
    partial void DeleteMemory(Memory instance);
    partial void InsertMotherBoard(MotherBoard instance);
    partial void UpdateMotherBoard(MotherBoard instance);
    partial void DeleteMotherBoard(MotherBoard instance);
    partial void InsertPowerSupply(PowerSupply instance);
    partial void UpdatePowerSupply(PowerSupply instance);
    partial void DeletePowerSupply(PowerSupply instance);
    partial void InsertSelect_Gpu(Select_Gpu instance);
    partial void UpdateSelect_Gpu(Select_Gpu instance);
    partial void DeleteSelect_Gpu(Select_Gpu instance);
    partial void InsertSelect_Memory(Select_Memory instance);
    partial void UpdateSelect_Memory(Select_Memory instance);
    partial void DeleteSelect_Memory(Select_Memory instance);
    partial void InsertSelect_Storage(Select_Storage instance);
    partial void UpdateSelect_Storage(Select_Storage instance);
    partial void DeleteSelect_Storage(Select_Storage instance);
    partial void InsertStorage(Storage instance);
    partial void UpdateStorage(Storage instance);
    partial void DeleteStorage(Storage instance);
    #endregion
		
		public databeuseDataContext() : 
				base(global::PcPartPicker_Desktop_Version.Properties.Settings.Default.projetConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public databeuseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databeuseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databeuseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databeuseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BUILD> BUILDs
		{
			get
			{
				return this.GetTable<BUILD>();
			}
		}
		
		public System.Data.Linq.Table<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
		
		public System.Data.Linq.Table<Case> Cases
		{
			get
			{
				return this.GetTable<Case>();
			}
		}
		
		public System.Data.Linq.Table<Cpu> Cpus
		{
			get
			{
				return this.GetTable<Cpu>();
			}
		}
		
		public System.Data.Linq.Table<CpuCooler> CpuCoolers
		{
			get
			{
				return this.GetTable<CpuCooler>();
			}
		}
		
		public System.Data.Linq.Table<Gpu> Gpus
		{
			get
			{
				return this.GetTable<Gpu>();
			}
		}
		
		public System.Data.Linq.Table<Memory> Memories
		{
			get
			{
				return this.GetTable<Memory>();
			}
		}
		
		public System.Data.Linq.Table<MotherBoard> MotherBoards
		{
			get
			{
				return this.GetTable<MotherBoard>();
			}
		}
		
		public System.Data.Linq.Table<PowerSupply> PowerSupplies
		{
			get
			{
				return this.GetTable<PowerSupply>();
			}
		}
		
		public System.Data.Linq.Table<Select_Gpu> Select_Gpus
		{
			get
			{
				return this.GetTable<Select_Gpu>();
			}
		}
		
		public System.Data.Linq.Table<Select_Memory> Select_Memories
		{
			get
			{
				return this.GetTable<Select_Memory>();
			}
		}
		
		public System.Data.Linq.Table<Select_Storage> Select_Storages
		{
			get
			{
				return this.GetTable<Select_Storage>();
			}
		}
		
		public System.Data.Linq.Table<Storage> Storages
		{
			get
			{
				return this.GetTable<Storage>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BUILD")]
	public partial class BUILD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Build_ID;
		
		private string _Build_Name;
		
		private string _Case_ID;
		
		private string _PowerSupply_ID;
		
		private string _CpuCooler_ID;
		
		private string _Cpu_ID;
		
		private string _MoBo_ID;
		
		private int _USER_ID;
		
		private System.Nullable<double> _Total_Price;
		
		private System.Nullable<decimal> _Total_Watt;
		
		private string _Bootable;
		
		private EntitySet<Select_Gpu> _Select_Gpus;
		
		private EntitySet<Select_Memory> _Select_Memories;
		
		private EntitySet<Select_Storage> _Select_Storages;
		
		private EntityRef<USER> _USER;
		
		private EntityRef<Case> _Case;
		
		private EntityRef<Cpu> _Cpu;
		
		private EntityRef<CpuCooler> _CpuCooler;
		
		private EntityRef<MotherBoard> _MotherBoard;
		
		private EntityRef<PowerSupply> _PowerSupply;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuild_IDChanging(int value);
    partial void OnBuild_IDChanged();
    partial void OnBuild_NameChanging(string value);
    partial void OnBuild_NameChanged();
    partial void OnCase_IDChanging(string value);
    partial void OnCase_IDChanged();
    partial void OnPowerSupply_IDChanging(string value);
    partial void OnPowerSupply_IDChanged();
    partial void OnCpuCooler_IDChanging(string value);
    partial void OnCpuCooler_IDChanged();
    partial void OnCpu_IDChanging(string value);
    partial void OnCpu_IDChanged();
    partial void OnMoBo_IDChanging(string value);
    partial void OnMoBo_IDChanged();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnTotal_PriceChanging(System.Nullable<double> value);
    partial void OnTotal_PriceChanged();
    partial void OnTotal_WattChanging(System.Nullable<decimal> value);
    partial void OnTotal_WattChanged();
    partial void OnBootableChanging(string value);
    partial void OnBootableChanged();
    #endregion
		
		public BUILD()
		{
			this._Select_Gpus = new EntitySet<Select_Gpu>(new Action<Select_Gpu>(this.attach_Select_Gpus), new Action<Select_Gpu>(this.detach_Select_Gpus));
			this._Select_Memories = new EntitySet<Select_Memory>(new Action<Select_Memory>(this.attach_Select_Memories), new Action<Select_Memory>(this.detach_Select_Memories));
			this._Select_Storages = new EntitySet<Select_Storage>(new Action<Select_Storage>(this.attach_Select_Storages), new Action<Select_Storage>(this.detach_Select_Storages));
			this._USER = default(EntityRef<USER>);
			this._Case = default(EntityRef<Case>);
			this._Cpu = default(EntityRef<Cpu>);
			this._CpuCooler = default(EntityRef<CpuCooler>);
			this._MotherBoard = default(EntityRef<MotherBoard>);
			this._PowerSupply = default(EntityRef<PowerSupply>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Build_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Build_ID
		{
			get
			{
				return this._Build_ID;
			}
			set
			{
				if ((this._Build_ID != value))
				{
					this.OnBuild_IDChanging(value);
					this.SendPropertyChanging();
					this._Build_ID = value;
					this.SendPropertyChanged("Build_ID");
					this.OnBuild_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Build_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Build_Name
		{
			get
			{
				return this._Build_Name;
			}
			set
			{
				if ((this._Build_Name != value))
				{
					this.OnBuild_NameChanging(value);
					this.SendPropertyChanging();
					this._Build_Name = value;
					this.SendPropertyChanged("Build_Name");
					this.OnBuild_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Case_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Case_ID
		{
			get
			{
				return this._Case_ID;
			}
			set
			{
				if ((this._Case_ID != value))
				{
					if (this._Case.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCase_IDChanging(value);
					this.SendPropertyChanging();
					this._Case_ID = value;
					this.SendPropertyChanged("Case_ID");
					this.OnCase_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerSupply_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PowerSupply_ID
		{
			get
			{
				return this._PowerSupply_ID;
			}
			set
			{
				if ((this._PowerSupply_ID != value))
				{
					if (this._PowerSupply.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPowerSupply_IDChanging(value);
					this.SendPropertyChanging();
					this._PowerSupply_ID = value;
					this.SendPropertyChanged("PowerSupply_ID");
					this.OnPowerSupply_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CpuCooler_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CpuCooler_ID
		{
			get
			{
				return this._CpuCooler_ID;
			}
			set
			{
				if ((this._CpuCooler_ID != value))
				{
					if (this._CpuCooler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCpuCooler_IDChanging(value);
					this.SendPropertyChanging();
					this._CpuCooler_ID = value;
					this.SendPropertyChanged("CpuCooler_ID");
					this.OnCpuCooler_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cpu_ID", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Cpu_ID
		{
			get
			{
				return this._Cpu_ID;
			}
			set
			{
				if ((this._Cpu_ID != value))
				{
					if (this._Cpu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCpu_IDChanging(value);
					this.SendPropertyChanging();
					this._Cpu_ID = value;
					this.SendPropertyChanged("Cpu_ID");
					this.OnCpu_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoBo_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MoBo_ID
		{
			get
			{
				return this._MoBo_ID;
			}
			set
			{
				if ((this._MoBo_ID != value))
				{
					if (this._MotherBoard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMoBo_IDChanging(value);
					this.SendPropertyChanging();
					this._MoBo_ID = value;
					this.SendPropertyChanged("MoBo_ID");
					this.OnMoBo_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int NOT NULL")]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Price", DbType="Float")]
		public System.Nullable<double> Total_Price
		{
			get
			{
				return this._Total_Price;
			}
			set
			{
				if ((this._Total_Price != value))
				{
					this.OnTotal_PriceChanging(value);
					this.SendPropertyChanging();
					this._Total_Price = value;
					this.SendPropertyChanged("Total_Price");
					this.OnTotal_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Watt", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Total_Watt
		{
			get
			{
				return this._Total_Watt;
			}
			set
			{
				if ((this._Total_Watt != value))
				{
					this.OnTotal_WattChanging(value);
					this.SendPropertyChanging();
					this._Total_Watt = value;
					this.SendPropertyChanged("Total_Watt");
					this.OnTotal_WattChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bootable", DbType="VarChar(10)")]
		public string Bootable
		{
			get
			{
				return this._Bootable;
			}
			set
			{
				if ((this._Bootable != value))
				{
					this.OnBootableChanging(value);
					this.SendPropertyChanging();
					this._Bootable = value;
					this.SendPropertyChanged("Bootable");
					this.OnBootableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUILD_Select_Gpu", Storage="_Select_Gpus", ThisKey="Build_ID", OtherKey="Build_ID")]
		public EntitySet<Select_Gpu> Select_Gpus
		{
			get
			{
				return this._Select_Gpus;
			}
			set
			{
				this._Select_Gpus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUILD_Select_Memory", Storage="_Select_Memories", ThisKey="Build_ID", OtherKey="Build_ID")]
		public EntitySet<Select_Memory> Select_Memories
		{
			get
			{
				return this._Select_Memories;
			}
			set
			{
				this._Select_Memories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUILD_Select_Storage", Storage="_Select_Storages", ThisKey="Build_ID", OtherKey="Build_ID")]
		public EntitySet<Select_Storage> Select_Storages
		{
			get
			{
				return this._Select_Storages;
			}
			set
			{
				this._Select_Storages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_BUILD", Storage="_USER", ThisKey="USER_ID", OtherKey="USER_ID", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.BUILDs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.BUILDs.Add(this);
						this._USER_ID = value.USER_ID;
					}
					else
					{
						this._USER_ID = default(int);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Case_BUILD", Storage="_Case", ThisKey="Case_ID", OtherKey="Case_ID", IsForeignKey=true)]
		public Case Case
		{
			get
			{
				return this._Case.Entity;
			}
			set
			{
				Case previousValue = this._Case.Entity;
				if (((previousValue != value) 
							|| (this._Case.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Case.Entity = null;
						previousValue.BUILDs.Remove(this);
					}
					this._Case.Entity = value;
					if ((value != null))
					{
						value.BUILDs.Add(this);
						this._Case_ID = value.Case_ID;
					}
					else
					{
						this._Case_ID = default(string);
					}
					this.SendPropertyChanged("Case");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cpu_BUILD", Storage="_Cpu", ThisKey="Cpu_ID", OtherKey="Cpu_ID", IsForeignKey=true)]
		public Cpu Cpu
		{
			get
			{
				return this._Cpu.Entity;
			}
			set
			{
				Cpu previousValue = this._Cpu.Entity;
				if (((previousValue != value) 
							|| (this._Cpu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cpu.Entity = null;
						previousValue.BUILDs.Remove(this);
					}
					this._Cpu.Entity = value;
					if ((value != null))
					{
						value.BUILDs.Add(this);
						this._Cpu_ID = value.Cpu_ID;
					}
					else
					{
						this._Cpu_ID = default(string);
					}
					this.SendPropertyChanged("Cpu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CpuCooler_BUILD", Storage="_CpuCooler", ThisKey="CpuCooler_ID", OtherKey="CpuCooler_ID", IsForeignKey=true)]
		public CpuCooler CpuCooler
		{
			get
			{
				return this._CpuCooler.Entity;
			}
			set
			{
				CpuCooler previousValue = this._CpuCooler.Entity;
				if (((previousValue != value) 
							|| (this._CpuCooler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CpuCooler.Entity = null;
						previousValue.BUILDs.Remove(this);
					}
					this._CpuCooler.Entity = value;
					if ((value != null))
					{
						value.BUILDs.Add(this);
						this._CpuCooler_ID = value.CpuCooler_ID;
					}
					else
					{
						this._CpuCooler_ID = default(string);
					}
					this.SendPropertyChanged("CpuCooler");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MotherBoard_BUILD", Storage="_MotherBoard", ThisKey="MoBo_ID", OtherKey="MoBo_ID", IsForeignKey=true)]
		public MotherBoard MotherBoard
		{
			get
			{
				return this._MotherBoard.Entity;
			}
			set
			{
				MotherBoard previousValue = this._MotherBoard.Entity;
				if (((previousValue != value) 
							|| (this._MotherBoard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MotherBoard.Entity = null;
						previousValue.BUILDs.Remove(this);
					}
					this._MotherBoard.Entity = value;
					if ((value != null))
					{
						value.BUILDs.Add(this);
						this._MoBo_ID = value.MoBo_ID;
					}
					else
					{
						this._MoBo_ID = default(string);
					}
					this.SendPropertyChanged("MotherBoard");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PowerSupply_BUILD", Storage="_PowerSupply", ThisKey="PowerSupply_ID", OtherKey="PowerSupply_ID", IsForeignKey=true)]
		public PowerSupply PowerSupply
		{
			get
			{
				return this._PowerSupply.Entity;
			}
			set
			{
				PowerSupply previousValue = this._PowerSupply.Entity;
				if (((previousValue != value) 
							|| (this._PowerSupply.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PowerSupply.Entity = null;
						previousValue.BUILDs.Remove(this);
					}
					this._PowerSupply.Entity = value;
					if ((value != null))
					{
						value.BUILDs.Add(this);
						this._PowerSupply_ID = value.PowerSupply_ID;
					}
					else
					{
						this._PowerSupply_ID = default(string);
					}
					this.SendPropertyChanged("PowerSupply");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Select_Gpus(Select_Gpu entity)
		{
			this.SendPropertyChanging();
			entity.BUILD = this;
		}
		
		private void detach_Select_Gpus(Select_Gpu entity)
		{
			this.SendPropertyChanging();
			entity.BUILD = null;
		}
		
		private void attach_Select_Memories(Select_Memory entity)
		{
			this.SendPropertyChanging();
			entity.BUILD = this;
		}
		
		private void detach_Select_Memories(Select_Memory entity)
		{
			this.SendPropertyChanging();
			entity.BUILD = null;
		}
		
		private void attach_Select_Storages(Select_Storage entity)
		{
			this.SendPropertyChanging();
			entity.BUILD = this;
		}
		
		private void detach_Select_Storages(Select_Storage entity)
		{
			this.SendPropertyChanging();
			entity.BUILD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[USER]")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _USER_ID;
		
		private string _First_Name;
		
		private string _Last_Name;
		
		private System.Nullable<System.DateTime> _BirthDay;
		
		private string _Phone;
		
		private string _Email;
		
		private string _Adress;
		
		private string _Sexe;
		
		private string _User_Picture;
		
		private string _ROLE;
		
		private string _UserName;
		
		private string _Password;
		
		private EntitySet<BUILD> _BUILDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnBirthDayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDayChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAdressChanging(string value);
    partial void OnAdressChanged();
    partial void OnSexeChanging(string value);
    partial void OnSexeChanged();
    partial void OnUser_PictureChanging(string value);
    partial void OnUser_PictureChanged();
    partial void OnROLEChanging(string value);
    partial void OnROLEChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public USER()
		{
			this._BUILDs = new EntitySet<BUILD>(new Action<BUILD>(this.attach_BUILDs), new Action<BUILD>(this.detach_BUILDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="VarChar(20)")]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="VarChar(20)")]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this.OnBirthDayChanging(value);
					this.SendPropertyChanging();
					this._BirthDay = value;
					this.SendPropertyChanged("BirthDay");
					this.OnBirthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress", DbType="VarChar(150)")]
		public string Adress
		{
			get
			{
				return this._Adress;
			}
			set
			{
				if ((this._Adress != value))
				{
					this.OnAdressChanging(value);
					this.SendPropertyChanging();
					this._Adress = value;
					this.SendPropertyChanged("Adress");
					this.OnAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexe", DbType="Char(2)")]
		public string Sexe
		{
			get
			{
				return this._Sexe;
			}
			set
			{
				if ((this._Sexe != value))
				{
					this.OnSexeChanging(value);
					this.SendPropertyChanging();
					this._Sexe = value;
					this.SendPropertyChanged("Sexe");
					this.OnSexeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Picture", DbType="VarChar(50)")]
		public string User_Picture
		{
			get
			{
				return this._User_Picture;
			}
			set
			{
				if ((this._User_Picture != value))
				{
					this.OnUser_PictureChanging(value);
					this.SendPropertyChanging();
					this._User_Picture = value;
					this.SendPropertyChanged("User_Picture");
					this.OnUser_PictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE", DbType="VarChar(50)")]
		public string ROLE
		{
			get
			{
				return this._ROLE;
			}
			set
			{
				if ((this._ROLE != value))
				{
					this.OnROLEChanging(value);
					this.SendPropertyChanging();
					this._ROLE = value;
					this.SendPropertyChanged("ROLE");
					this.OnROLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_BUILD", Storage="_BUILDs", ThisKey="USER_ID", OtherKey="USER_ID")]
		public EntitySet<BUILD> BUILDs
		{
			get
			{
				return this._BUILDs;
			}
			set
			{
				this._BUILDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BUILDs(BUILD entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_BUILDs(BUILD entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Case]")]
	public partial class Case : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Case_ID;
		
		private string _Manufacturer_Case;
		
		private string _Type_Case;
		
		private string _Side_Panel_Window;
		
		private System.Nullable<float> _Volume;
		
		private System.Nullable<double> _Case_Price;
		
		private string _Case_Picture;
		
		private EntitySet<BUILD> _BUILDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCase_IDChanging(string value);
    partial void OnCase_IDChanged();
    partial void OnManufacturer_CaseChanging(string value);
    partial void OnManufacturer_CaseChanged();
    partial void OnType_CaseChanging(string value);
    partial void OnType_CaseChanged();
    partial void OnSide_Panel_WindowChanging(string value);
    partial void OnSide_Panel_WindowChanged();
    partial void OnVolumeChanging(System.Nullable<float> value);
    partial void OnVolumeChanged();
    partial void OnCase_PriceChanging(System.Nullable<double> value);
    partial void OnCase_PriceChanged();
    partial void OnCase_PictureChanging(string value);
    partial void OnCase_PictureChanged();
    #endregion
		
		public Case()
		{
			this._BUILDs = new EntitySet<BUILD>(new Action<BUILD>(this.attach_BUILDs), new Action<BUILD>(this.detach_BUILDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Case_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Case_ID
		{
			get
			{
				return this._Case_ID;
			}
			set
			{
				if ((this._Case_ID != value))
				{
					this.OnCase_IDChanging(value);
					this.SendPropertyChanging();
					this._Case_ID = value;
					this.SendPropertyChanged("Case_ID");
					this.OnCase_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer_Case", DbType="VarChar(50)")]
		public string Manufacturer_Case
		{
			get
			{
				return this._Manufacturer_Case;
			}
			set
			{
				if ((this._Manufacturer_Case != value))
				{
					this.OnManufacturer_CaseChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer_Case = value;
					this.SendPropertyChanged("Manufacturer_Case");
					this.OnManufacturer_CaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Case", DbType="VarChar(50)")]
		public string Type_Case
		{
			get
			{
				return this._Type_Case;
			}
			set
			{
				if ((this._Type_Case != value))
				{
					this.OnType_CaseChanging(value);
					this.SendPropertyChanging();
					this._Type_Case = value;
					this.SendPropertyChanged("Type_Case");
					this.OnType_CaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Side Panel Window]", Storage="_Side_Panel_Window", DbType="VarChar(50)")]
		public string Side_Panel_Window
		{
			get
			{
				return this._Side_Panel_Window;
			}
			set
			{
				if ((this._Side_Panel_Window != value))
				{
					this.OnSide_Panel_WindowChanging(value);
					this.SendPropertyChanging();
					this._Side_Panel_Window = value;
					this.SendPropertyChanged("Side_Panel_Window");
					this.OnSide_Panel_WindowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Real")]
		public System.Nullable<float> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Case_Price", DbType="Float")]
		public System.Nullable<double> Case_Price
		{
			get
			{
				return this._Case_Price;
			}
			set
			{
				if ((this._Case_Price != value))
				{
					this.OnCase_PriceChanging(value);
					this.SendPropertyChanging();
					this._Case_Price = value;
					this.SendPropertyChanged("Case_Price");
					this.OnCase_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Case_Picture", DbType="VarChar(50)")]
		public string Case_Picture
		{
			get
			{
				return this._Case_Picture;
			}
			set
			{
				if ((this._Case_Picture != value))
				{
					this.OnCase_PictureChanging(value);
					this.SendPropertyChanging();
					this._Case_Picture = value;
					this.SendPropertyChanged("Case_Picture");
					this.OnCase_PictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Case_BUILD", Storage="_BUILDs", ThisKey="Case_ID", OtherKey="Case_ID")]
		public EntitySet<BUILD> BUILDs
		{
			get
			{
				return this._BUILDs;
			}
			set
			{
				this._BUILDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BUILDs(BUILD entity)
		{
			this.SendPropertyChanging();
			entity.Case = this;
		}
		
		private void detach_BUILDs(BUILD entity)
		{
			this.SendPropertyChanging();
			entity.Case = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cpu")]
	public partial class Cpu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Cpu_ID;
		
		private string _ManufacturerCpu;
		
		private System.Nullable<int> _Core_Count;
		
		private System.Nullable<int> _Threads_Count;
		
		private System.Nullable<float> _Core_Clock_Cpu;
		
		private System.Nullable<float> _Boost_Clock_Cpu;
		
		private string _Socket;
		
		private System.Nullable<int> _TDP_Cpu;
		
		private System.Nullable<int> _Maximum_Supported_Memory_Cpu;
		
		private System.Nullable<double> _Cpu_Price;
		
		private string _Integrated_Gpu;
		
		private string _Cpu_Picture;
		
		private EntitySet<BUILD> _BUILDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCpu_IDChanging(string value);
    partial void OnCpu_IDChanged();
    partial void OnManufacturerCpuChanging(string value);
    partial void OnManufacturerCpuChanged();
    partial void OnCore_CountChanging(System.Nullable<int> value);
    partial void OnCore_CountChanged();
    partial void OnThreads_CountChanging(System.Nullable<int> value);
    partial void OnThreads_CountChanged();
    partial void OnCore_Clock_CpuChanging(System.Nullable<float> value);
    partial void OnCore_Clock_CpuChanged();
    partial void OnBoost_Clock_CpuChanging(System.Nullable<float> value);
    partial void OnBoost_Clock_CpuChanged();
    partial void OnSocketChanging(string value);
    partial void OnSocketChanged();
    partial void OnTDP_CpuChanging(System.Nullable<int> value);
    partial void OnTDP_CpuChanged();
    partial void OnMaximum_Supported_Memory_CpuChanging(System.Nullable<int> value);
    partial void OnMaximum_Supported_Memory_CpuChanged();
    partial void OnCpu_PriceChanging(System.Nullable<double> value);
    partial void OnCpu_PriceChanged();
    partial void OnIntegrated_GpuChanging(string value);
    partial void OnIntegrated_GpuChanged();
    partial void OnCpu_PictureChanging(string value);
    partial void OnCpu_PictureChanged();
    #endregion
		
		public Cpu()
		{
			this._BUILDs = new EntitySet<BUILD>(new Action<BUILD>(this.attach_BUILDs), new Action<BUILD>(this.detach_BUILDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cpu_ID", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Cpu_ID
		{
			get
			{
				return this._Cpu_ID;
			}
			set
			{
				if ((this._Cpu_ID != value))
				{
					this.OnCpu_IDChanging(value);
					this.SendPropertyChanging();
					this._Cpu_ID = value;
					this.SendPropertyChanged("Cpu_ID");
					this.OnCpu_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerCpu", DbType="VarChar(40)")]
		public string ManufacturerCpu
		{
			get
			{
				return this._ManufacturerCpu;
			}
			set
			{
				if ((this._ManufacturerCpu != value))
				{
					this.OnManufacturerCpuChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerCpu = value;
					this.SendPropertyChanged("ManufacturerCpu");
					this.OnManufacturerCpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Core Count]", Storage="_Core_Count", DbType="Int")]
		public System.Nullable<int> Core_Count
		{
			get
			{
				return this._Core_Count;
			}
			set
			{
				if ((this._Core_Count != value))
				{
					this.OnCore_CountChanging(value);
					this.SendPropertyChanging();
					this._Core_Count = value;
					this.SendPropertyChanged("Core_Count");
					this.OnCore_CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Threads Count]", Storage="_Threads_Count", DbType="Int")]
		public System.Nullable<int> Threads_Count
		{
			get
			{
				return this._Threads_Count;
			}
			set
			{
				if ((this._Threads_Count != value))
				{
					this.OnThreads_CountChanging(value);
					this.SendPropertyChanging();
					this._Threads_Count = value;
					this.SendPropertyChanged("Threads_Count");
					this.OnThreads_CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Core Clock_Cpu]", Storage="_Core_Clock_Cpu", DbType="Real")]
		public System.Nullable<float> Core_Clock_Cpu
		{
			get
			{
				return this._Core_Clock_Cpu;
			}
			set
			{
				if ((this._Core_Clock_Cpu != value))
				{
					this.OnCore_Clock_CpuChanging(value);
					this.SendPropertyChanging();
					this._Core_Clock_Cpu = value;
					this.SendPropertyChanged("Core_Clock_Cpu");
					this.OnCore_Clock_CpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Boost Clock_Cpu]", Storage="_Boost_Clock_Cpu", DbType="Real")]
		public System.Nullable<float> Boost_Clock_Cpu
		{
			get
			{
				return this._Boost_Clock_Cpu;
			}
			set
			{
				if ((this._Boost_Clock_Cpu != value))
				{
					this.OnBoost_Clock_CpuChanging(value);
					this.SendPropertyChanging();
					this._Boost_Clock_Cpu = value;
					this.SendPropertyChanged("Boost_Clock_Cpu");
					this.OnBoost_Clock_CpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Socket", DbType="VarChar(20)")]
		public string Socket
		{
			get
			{
				return this._Socket;
			}
			set
			{
				if ((this._Socket != value))
				{
					this.OnSocketChanging(value);
					this.SendPropertyChanging();
					this._Socket = value;
					this.SendPropertyChanged("Socket");
					this.OnSocketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDP_Cpu", DbType="Int")]
		public System.Nullable<int> TDP_Cpu
		{
			get
			{
				return this._TDP_Cpu;
			}
			set
			{
				if ((this._TDP_Cpu != value))
				{
					this.OnTDP_CpuChanging(value);
					this.SendPropertyChanging();
					this._TDP_Cpu = value;
					this.SendPropertyChanged("TDP_Cpu");
					this.OnTDP_CpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Maximum Supported Memory_Cpu]", Storage="_Maximum_Supported_Memory_Cpu", DbType="Int")]
		public System.Nullable<int> Maximum_Supported_Memory_Cpu
		{
			get
			{
				return this._Maximum_Supported_Memory_Cpu;
			}
			set
			{
				if ((this._Maximum_Supported_Memory_Cpu != value))
				{
					this.OnMaximum_Supported_Memory_CpuChanging(value);
					this.SendPropertyChanging();
					this._Maximum_Supported_Memory_Cpu = value;
					this.SendPropertyChanged("Maximum_Supported_Memory_Cpu");
					this.OnMaximum_Supported_Memory_CpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cpu_Price", DbType="Float")]
		public System.Nullable<double> Cpu_Price
		{
			get
			{
				return this._Cpu_Price;
			}
			set
			{
				if ((this._Cpu_Price != value))
				{
					this.OnCpu_PriceChanging(value);
					this.SendPropertyChanging();
					this._Cpu_Price = value;
					this.SendPropertyChanged("Cpu_Price");
					this.OnCpu_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Integrated Gpu]", Storage="_Integrated_Gpu", DbType="VarChar(50)")]
		public string Integrated_Gpu
		{
			get
			{
				return this._Integrated_Gpu;
			}
			set
			{
				if ((this._Integrated_Gpu != value))
				{
					this.OnIntegrated_GpuChanging(value);
					this.SendPropertyChanging();
					this._Integrated_Gpu = value;
					this.SendPropertyChanged("Integrated_Gpu");
					this.OnIntegrated_GpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cpu_Picture", DbType="VarChar(50)")]
		public string Cpu_Picture
		{
			get
			{
				return this._Cpu_Picture;
			}
			set
			{
				if ((this._Cpu_Picture != value))
				{
					this.OnCpu_PictureChanging(value);
					this.SendPropertyChanging();
					this._Cpu_Picture = value;
					this.SendPropertyChanged("Cpu_Picture");
					this.OnCpu_PictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cpu_BUILD", Storage="_BUILDs", ThisKey="Cpu_ID", OtherKey="Cpu_ID")]
		public EntitySet<BUILD> BUILDs
		{
			get
			{
				return this._BUILDs;
			}
			set
			{
				this._BUILDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BUILDs(BUILD entity)
		{
			this.SendPropertyChanging();
			entity.Cpu = this;
		}
		
		private void detach_BUILDs(BUILD entity)
		{
			this.SendPropertyChanging();
			entity.Cpu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CpuCooler")]
	public partial class CpuCooler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CpuCooler_ID;
		
		private string _ManufacturerCpuCooler;
		
		private string _Model_CpuCooler;
		
		private string _Fan_RPM;
		
		private string _Max_Noise_Level;
		
		private string _Water_Cooled;
		
		private System.Nullable<double> _CpuCooler_Price;
		
		private string _CpuCooler_Picture;
		
		private EntitySet<BUILD> _BUILDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCpuCooler_IDChanging(string value);
    partial void OnCpuCooler_IDChanged();
    partial void OnManufacturerCpuCoolerChanging(string value);
    partial void OnManufacturerCpuCoolerChanged();
    partial void OnModel_CpuCoolerChanging(string value);
    partial void OnModel_CpuCoolerChanged();
    partial void OnFan_RPMChanging(string value);
    partial void OnFan_RPMChanged();
    partial void OnMax_Noise_LevelChanging(string value);
    partial void OnMax_Noise_LevelChanged();
    partial void OnWater_CooledChanging(string value);
    partial void OnWater_CooledChanged();
    partial void OnCpuCooler_PriceChanging(System.Nullable<double> value);
    partial void OnCpuCooler_PriceChanged();
    partial void OnCpuCooler_PictureChanging(string value);
    partial void OnCpuCooler_PictureChanged();
    #endregion
		
		public CpuCooler()
		{
			this._BUILDs = new EntitySet<BUILD>(new Action<BUILD>(this.attach_BUILDs), new Action<BUILD>(this.detach_BUILDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CpuCooler_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CpuCooler_ID
		{
			get
			{
				return this._CpuCooler_ID;
			}
			set
			{
				if ((this._CpuCooler_ID != value))
				{
					this.OnCpuCooler_IDChanging(value);
					this.SendPropertyChanging();
					this._CpuCooler_ID = value;
					this.SendPropertyChanged("CpuCooler_ID");
					this.OnCpuCooler_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerCpuCooler", DbType="VarChar(40)")]
		public string ManufacturerCpuCooler
		{
			get
			{
				return this._ManufacturerCpuCooler;
			}
			set
			{
				if ((this._ManufacturerCpuCooler != value))
				{
					this.OnManufacturerCpuCoolerChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerCpuCooler = value;
					this.SendPropertyChanged("ManufacturerCpuCooler");
					this.OnManufacturerCpuCoolerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model_CpuCooler", DbType="VarChar(40)")]
		public string Model_CpuCooler
		{
			get
			{
				return this._Model_CpuCooler;
			}
			set
			{
				if ((this._Model_CpuCooler != value))
				{
					this.OnModel_CpuCoolerChanging(value);
					this.SendPropertyChanging();
					this._Model_CpuCooler = value;
					this.SendPropertyChanged("Model_CpuCooler");
					this.OnModel_CpuCoolerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Fan RPM]", Storage="_Fan_RPM", DbType="VarChar(50)")]
		public string Fan_RPM
		{
			get
			{
				return this._Fan_RPM;
			}
			set
			{
				if ((this._Fan_RPM != value))
				{
					this.OnFan_RPMChanging(value);
					this.SendPropertyChanging();
					this._Fan_RPM = value;
					this.SendPropertyChanged("Fan_RPM");
					this.OnFan_RPMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Max Noise Level]", Storage="_Max_Noise_Level", DbType="VarChar(50)")]
		public string Max_Noise_Level
		{
			get
			{
				return this._Max_Noise_Level;
			}
			set
			{
				if ((this._Max_Noise_Level != value))
				{
					this.OnMax_Noise_LevelChanging(value);
					this.SendPropertyChanging();
					this._Max_Noise_Level = value;
					this.SendPropertyChanged("Max_Noise_Level");
					this.OnMax_Noise_LevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Water Cooled]", Storage="_Water_Cooled", DbType="VarChar(100)")]
		public string Water_Cooled
		{
			get
			{
				return this._Water_Cooled;
			}
			set
			{
				if ((this._Water_Cooled != value))
				{
					this.OnWater_CooledChanging(value);
					this.SendPropertyChanging();
					this._Water_Cooled = value;
					this.SendPropertyChanged("Water_Cooled");
					this.OnWater_CooledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CpuCooler_Price", DbType="Float")]
		public System.Nullable<double> CpuCooler_Price
		{
			get
			{
				return this._CpuCooler_Price;
			}
			set
			{
				if ((this._CpuCooler_Price != value))
				{
					this.OnCpuCooler_PriceChanging(value);
					this.SendPropertyChanging();
					this._CpuCooler_Price = value;
					this.SendPropertyChanged("CpuCooler_Price");
					this.OnCpuCooler_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CpuCooler_Picture", DbType="VarChar(50)")]
		public string CpuCooler_Picture
		{
			get
			{
				return this._CpuCooler_Picture;
			}
			set
			{
				if ((this._CpuCooler_Picture != value))
				{
					this.OnCpuCooler_PictureChanging(value);
					this.SendPropertyChanging();
					this._CpuCooler_Picture = value;
					this.SendPropertyChanged("CpuCooler_Picture");
					this.OnCpuCooler_PictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CpuCooler_BUILD", Storage="_BUILDs", ThisKey="CpuCooler_ID", OtherKey="CpuCooler_ID")]
		public EntitySet<BUILD> BUILDs
		{
			get
			{
				return this._BUILDs;
			}
			set
			{
				this._BUILDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BUILDs(BUILD entity)
		{
			this.SendPropertyChanging();
			entity.CpuCooler = this;
		}
		
		private void detach_BUILDs(BUILD entity)
		{
			this.SendPropertyChanging();
			entity.CpuCooler = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gpu")]
	public partial class Gpu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Gpu_ID;
		
		private string _Manufacturer_Gpu;
		
		private string _Chipset_Gpu;
		
		private System.Nullable<int> _Memory_Speed_Gpu;
		
		private string _Memory_Type_Gpu;
		
		private System.Nullable<int> _Core_Clock_Gpu;
		
		private System.Nullable<int> _Boost_Clock_Gpu;
		
		private string _Frame_Sync;
		
		private System.Nullable<int> _TDP_Gpu;
		
		private System.Nullable<double> _Gpu_Price;
		
		private string _Gpu_Picture;
		
		private EntitySet<Select_Gpu> _Select_Gpus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGpu_IDChanging(string value);
    partial void OnGpu_IDChanged();
    partial void OnManufacturer_GpuChanging(string value);
    partial void OnManufacturer_GpuChanged();
    partial void OnChipset_GpuChanging(string value);
    partial void OnChipset_GpuChanged();
    partial void OnMemory_Speed_GpuChanging(System.Nullable<int> value);
    partial void OnMemory_Speed_GpuChanged();
    partial void OnMemory_Type_GpuChanging(string value);
    partial void OnMemory_Type_GpuChanged();
    partial void OnCore_Clock_GpuChanging(System.Nullable<int> value);
    partial void OnCore_Clock_GpuChanged();
    partial void OnBoost_Clock_GpuChanging(System.Nullable<int> value);
    partial void OnBoost_Clock_GpuChanged();
    partial void OnFrame_SyncChanging(string value);
    partial void OnFrame_SyncChanged();
    partial void OnTDP_GpuChanging(System.Nullable<int> value);
    partial void OnTDP_GpuChanged();
    partial void OnGpu_PriceChanging(System.Nullable<double> value);
    partial void OnGpu_PriceChanged();
    partial void OnGpu_PictureChanging(string value);
    partial void OnGpu_PictureChanged();
    #endregion
		
		public Gpu()
		{
			this._Select_Gpus = new EntitySet<Select_Gpu>(new Action<Select_Gpu>(this.attach_Select_Gpus), new Action<Select_Gpu>(this.detach_Select_Gpus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gpu_ID", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Gpu_ID
		{
			get
			{
				return this._Gpu_ID;
			}
			set
			{
				if ((this._Gpu_ID != value))
				{
					this.OnGpu_IDChanging(value);
					this.SendPropertyChanging();
					this._Gpu_ID = value;
					this.SendPropertyChanged("Gpu_ID");
					this.OnGpu_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer_Gpu", DbType="VarChar(50)")]
		public string Manufacturer_Gpu
		{
			get
			{
				return this._Manufacturer_Gpu;
			}
			set
			{
				if ((this._Manufacturer_Gpu != value))
				{
					this.OnManufacturer_GpuChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer_Gpu = value;
					this.SendPropertyChanged("Manufacturer_Gpu");
					this.OnManufacturer_GpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chipset_Gpu", DbType="VarChar(50)")]
		public string Chipset_Gpu
		{
			get
			{
				return this._Chipset_Gpu;
			}
			set
			{
				if ((this._Chipset_Gpu != value))
				{
					this.OnChipset_GpuChanging(value);
					this.SendPropertyChanging();
					this._Chipset_Gpu = value;
					this.SendPropertyChanged("Chipset_Gpu");
					this.OnChipset_GpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memory_Speed_Gpu", DbType="Int")]
		public System.Nullable<int> Memory_Speed_Gpu
		{
			get
			{
				return this._Memory_Speed_Gpu;
			}
			set
			{
				if ((this._Memory_Speed_Gpu != value))
				{
					this.OnMemory_Speed_GpuChanging(value);
					this.SendPropertyChanging();
					this._Memory_Speed_Gpu = value;
					this.SendPropertyChanged("Memory_Speed_Gpu");
					this.OnMemory_Speed_GpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Memory Type_Gpu]", Storage="_Memory_Type_Gpu", DbType="VarChar(20)")]
		public string Memory_Type_Gpu
		{
			get
			{
				return this._Memory_Type_Gpu;
			}
			set
			{
				if ((this._Memory_Type_Gpu != value))
				{
					this.OnMemory_Type_GpuChanging(value);
					this.SendPropertyChanging();
					this._Memory_Type_Gpu = value;
					this.SendPropertyChanged("Memory_Type_Gpu");
					this.OnMemory_Type_GpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Core Clock_Gpu]", Storage="_Core_Clock_Gpu", DbType="Int")]
		public System.Nullable<int> Core_Clock_Gpu
		{
			get
			{
				return this._Core_Clock_Gpu;
			}
			set
			{
				if ((this._Core_Clock_Gpu != value))
				{
					this.OnCore_Clock_GpuChanging(value);
					this.SendPropertyChanging();
					this._Core_Clock_Gpu = value;
					this.SendPropertyChanged("Core_Clock_Gpu");
					this.OnCore_Clock_GpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Boost Clock_Gpu]", Storage="_Boost_Clock_Gpu", DbType="Int")]
		public System.Nullable<int> Boost_Clock_Gpu
		{
			get
			{
				return this._Boost_Clock_Gpu;
			}
			set
			{
				if ((this._Boost_Clock_Gpu != value))
				{
					this.OnBoost_Clock_GpuChanging(value);
					this.SendPropertyChanging();
					this._Boost_Clock_Gpu = value;
					this.SendPropertyChanged("Boost_Clock_Gpu");
					this.OnBoost_Clock_GpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Frame Sync]", Storage="_Frame_Sync", DbType="VarChar(20)")]
		public string Frame_Sync
		{
			get
			{
				return this._Frame_Sync;
			}
			set
			{
				if ((this._Frame_Sync != value))
				{
					this.OnFrame_SyncChanging(value);
					this.SendPropertyChanging();
					this._Frame_Sync = value;
					this.SendPropertyChanged("Frame_Sync");
					this.OnFrame_SyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDP_Gpu", DbType="Int")]
		public System.Nullable<int> TDP_Gpu
		{
			get
			{
				return this._TDP_Gpu;
			}
			set
			{
				if ((this._TDP_Gpu != value))
				{
					this.OnTDP_GpuChanging(value);
					this.SendPropertyChanging();
					this._TDP_Gpu = value;
					this.SendPropertyChanged("TDP_Gpu");
					this.OnTDP_GpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gpu_Price", DbType="Float")]
		public System.Nullable<double> Gpu_Price
		{
			get
			{
				return this._Gpu_Price;
			}
			set
			{
				if ((this._Gpu_Price != value))
				{
					this.OnGpu_PriceChanging(value);
					this.SendPropertyChanging();
					this._Gpu_Price = value;
					this.SendPropertyChanged("Gpu_Price");
					this.OnGpu_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gpu_Picture", DbType="VarChar(50)")]
		public string Gpu_Picture
		{
			get
			{
				return this._Gpu_Picture;
			}
			set
			{
				if ((this._Gpu_Picture != value))
				{
					this.OnGpu_PictureChanging(value);
					this.SendPropertyChanging();
					this._Gpu_Picture = value;
					this.SendPropertyChanged("Gpu_Picture");
					this.OnGpu_PictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gpu_Select_Gpu", Storage="_Select_Gpus", ThisKey="Gpu_ID", OtherKey="Gpu_ID")]
		public EntitySet<Select_Gpu> Select_Gpus
		{
			get
			{
				return this._Select_Gpus;
			}
			set
			{
				this._Select_Gpus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Select_Gpus(Select_Gpu entity)
		{
			this.SendPropertyChanging();
			entity.Gpu = this;
		}
		
		private void detach_Select_Gpus(Select_Gpu entity)
		{
			this.SendPropertyChanging();
			entity.Gpu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Memory")]
	public partial class Memory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Memory_ID;
		
		private string _ManufacturerMemory;
		
		private System.Nullable<int> _MemorySize;
		
		private System.Nullable<int> _Speed;
		
		private System.Nullable<int> _RAM_Slots;
		
		private System.Nullable<float> _Voltage;
		
		private System.Nullable<int> _CAS_Latency;
		
		private System.Nullable<double> _Memory_Price;
		
		private string _Memory_Picture;
		
		private EntitySet<Select_Memory> _Select_Memories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemory_IDChanging(string value);
    partial void OnMemory_IDChanged();
    partial void OnManufacturerMemoryChanging(string value);
    partial void OnManufacturerMemoryChanged();
    partial void OnMemorySizeChanging(System.Nullable<int> value);
    partial void OnMemorySizeChanged();
    partial void OnSpeedChanging(System.Nullable<int> value);
    partial void OnSpeedChanged();
    partial void OnRAM_SlotsChanging(System.Nullable<int> value);
    partial void OnRAM_SlotsChanged();
    partial void OnVoltageChanging(System.Nullable<float> value);
    partial void OnVoltageChanged();
    partial void OnCAS_LatencyChanging(System.Nullable<int> value);
    partial void OnCAS_LatencyChanged();
    partial void OnMemory_PriceChanging(System.Nullable<double> value);
    partial void OnMemory_PriceChanged();
    partial void OnMemory_PictureChanging(string value);
    partial void OnMemory_PictureChanged();
    #endregion
		
		public Memory()
		{
			this._Select_Memories = new EntitySet<Select_Memory>(new Action<Select_Memory>(this.attach_Select_Memories), new Action<Select_Memory>(this.detach_Select_Memories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memory_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Memory_ID
		{
			get
			{
				return this._Memory_ID;
			}
			set
			{
				if ((this._Memory_ID != value))
				{
					this.OnMemory_IDChanging(value);
					this.SendPropertyChanging();
					this._Memory_ID = value;
					this.SendPropertyChanged("Memory_ID");
					this.OnMemory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerMemory", DbType="VarChar(40)")]
		public string ManufacturerMemory
		{
			get
			{
				return this._ManufacturerMemory;
			}
			set
			{
				if ((this._ManufacturerMemory != value))
				{
					this.OnManufacturerMemoryChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerMemory = value;
					this.SendPropertyChanged("ManufacturerMemory");
					this.OnManufacturerMemoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemorySize", DbType="Int")]
		public System.Nullable<int> MemorySize
		{
			get
			{
				return this._MemorySize;
			}
			set
			{
				if ((this._MemorySize != value))
				{
					this.OnMemorySizeChanging(value);
					this.SendPropertyChanging();
					this._MemorySize = value;
					this.SendPropertyChanged("MemorySize");
					this.OnMemorySizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speed", DbType="Int")]
		public System.Nullable<int> Speed
		{
			get
			{
				return this._Speed;
			}
			set
			{
				if ((this._Speed != value))
				{
					this.OnSpeedChanging(value);
					this.SendPropertyChanging();
					this._Speed = value;
					this.SendPropertyChanged("Speed");
					this.OnSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAM_Slots", DbType="Int")]
		public System.Nullable<int> RAM_Slots
		{
			get
			{
				return this._RAM_Slots;
			}
			set
			{
				if ((this._RAM_Slots != value))
				{
					this.OnRAM_SlotsChanging(value);
					this.SendPropertyChanging();
					this._RAM_Slots = value;
					this.SendPropertyChanged("RAM_Slots");
					this.OnRAM_SlotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voltage", DbType="Real")]
		public System.Nullable<float> Voltage
		{
			get
			{
				return this._Voltage;
			}
			set
			{
				if ((this._Voltage != value))
				{
					this.OnVoltageChanging(value);
					this.SendPropertyChanging();
					this._Voltage = value;
					this.SendPropertyChanged("Voltage");
					this.OnVoltageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[CAS Latency]", Storage="_CAS_Latency", DbType="Int")]
		public System.Nullable<int> CAS_Latency
		{
			get
			{
				return this._CAS_Latency;
			}
			set
			{
				if ((this._CAS_Latency != value))
				{
					this.OnCAS_LatencyChanging(value);
					this.SendPropertyChanging();
					this._CAS_Latency = value;
					this.SendPropertyChanged("CAS_Latency");
					this.OnCAS_LatencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memory_Price", DbType="Float")]
		public System.Nullable<double> Memory_Price
		{
			get
			{
				return this._Memory_Price;
			}
			set
			{
				if ((this._Memory_Price != value))
				{
					this.OnMemory_PriceChanging(value);
					this.SendPropertyChanging();
					this._Memory_Price = value;
					this.SendPropertyChanged("Memory_Price");
					this.OnMemory_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memory_Picture", DbType="VarChar(50)")]
		public string Memory_Picture
		{
			get
			{
				return this._Memory_Picture;
			}
			set
			{
				if ((this._Memory_Picture != value))
				{
					this.OnMemory_PictureChanging(value);
					this.SendPropertyChanging();
					this._Memory_Picture = value;
					this.SendPropertyChanged("Memory_Picture");
					this.OnMemory_PictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Memory_Select_Memory", Storage="_Select_Memories", ThisKey="Memory_ID", OtherKey="Memory_ID")]
		public EntitySet<Select_Memory> Select_Memories
		{
			get
			{
				return this._Select_Memories;
			}
			set
			{
				this._Select_Memories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Select_Memories(Select_Memory entity)
		{
			this.SendPropertyChanging();
			entity.Memory = this;
		}
		
		private void detach_Select_Memories(Select_Memory entity)
		{
			this.SendPropertyChanging();
			entity.Memory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MotherBoard")]
	public partial class MotherBoard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MoBo_ID;
		
		private string _ManufacturerMoBo;
		
		private string _Socket___CPU;
		
		private string _Form_Factor;
		
		private string _Chipset_MoBo;
		
		private System.Nullable<int> _RAM_Slots_MoBo;
		
		private System.Nullable<int> _Max_RAM;
		
		private System.Nullable<int> _SATA_6_Gb_s;
		
		private System.Nullable<int> _M_2_Slots;
		
		private System.Nullable<double> _MoBo_Price;
		
		private string _Mobo_Picture;
		
		private EntitySet<BUILD> _BUILDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMoBo_IDChanging(string value);
    partial void OnMoBo_IDChanged();
    partial void OnManufacturerMoBoChanging(string value);
    partial void OnManufacturerMoBoChanged();
    partial void OnSocket___CPUChanging(string value);
    partial void OnSocket___CPUChanged();
    partial void OnForm_FactorChanging(string value);
    partial void OnForm_FactorChanged();
    partial void OnChipset_MoBoChanging(string value);
    partial void OnChipset_MoBoChanged();
    partial void OnRAM_Slots_MoBoChanging(System.Nullable<int> value);
    partial void OnRAM_Slots_MoBoChanged();
    partial void OnMax_RAMChanging(System.Nullable<int> value);
    partial void OnMax_RAMChanged();
    partial void OnSATA_6_Gb_sChanging(System.Nullable<int> value);
    partial void OnSATA_6_Gb_sChanged();
    partial void OnM_2_SlotsChanging(System.Nullable<int> value);
    partial void OnM_2_SlotsChanged();
    partial void OnMoBo_PriceChanging(System.Nullable<double> value);
    partial void OnMoBo_PriceChanged();
    partial void OnMobo_PictureChanging(string value);
    partial void OnMobo_PictureChanged();
    #endregion
		
		public MotherBoard()
		{
			this._BUILDs = new EntitySet<BUILD>(new Action<BUILD>(this.attach_BUILDs), new Action<BUILD>(this.detach_BUILDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoBo_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MoBo_ID
		{
			get
			{
				return this._MoBo_ID;
			}
			set
			{
				if ((this._MoBo_ID != value))
				{
					this.OnMoBo_IDChanging(value);
					this.SendPropertyChanging();
					this._MoBo_ID = value;
					this.SendPropertyChanged("MoBo_ID");
					this.OnMoBo_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerMoBo", DbType="VarChar(40)")]
		public string ManufacturerMoBo
		{
			get
			{
				return this._ManufacturerMoBo;
			}
			set
			{
				if ((this._ManufacturerMoBo != value))
				{
					this.OnManufacturerMoBoChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerMoBo = value;
					this.SendPropertyChanged("ManufacturerMoBo");
					this.OnManufacturerMoBoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Socket / CPU]", Storage="_Socket___CPU", DbType="VarChar(20)")]
		public string Socket___CPU
		{
			get
			{
				return this._Socket___CPU;
			}
			set
			{
				if ((this._Socket___CPU != value))
				{
					this.OnSocket___CPUChanging(value);
					this.SendPropertyChanging();
					this._Socket___CPU = value;
					this.SendPropertyChanged("Socket___CPU");
					this.OnSocket___CPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Form Factor]", Storage="_Form_Factor", DbType="VarChar(40)")]
		public string Form_Factor
		{
			get
			{
				return this._Form_Factor;
			}
			set
			{
				if ((this._Form_Factor != value))
				{
					this.OnForm_FactorChanging(value);
					this.SendPropertyChanging();
					this._Form_Factor = value;
					this.SendPropertyChanged("Form_Factor");
					this.OnForm_FactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chipset_MoBo", DbType="VarChar(40)")]
		public string Chipset_MoBo
		{
			get
			{
				return this._Chipset_MoBo;
			}
			set
			{
				if ((this._Chipset_MoBo != value))
				{
					this.OnChipset_MoBoChanging(value);
					this.SendPropertyChanging();
					this._Chipset_MoBo = value;
					this.SendPropertyChanged("Chipset_MoBo");
					this.OnChipset_MoBoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[RAM Slots_MoBo]", Storage="_RAM_Slots_MoBo", DbType="Int")]
		public System.Nullable<int> RAM_Slots_MoBo
		{
			get
			{
				return this._RAM_Slots_MoBo;
			}
			set
			{
				if ((this._RAM_Slots_MoBo != value))
				{
					this.OnRAM_Slots_MoBoChanging(value);
					this.SendPropertyChanging();
					this._RAM_Slots_MoBo = value;
					this.SendPropertyChanged("RAM_Slots_MoBo");
					this.OnRAM_Slots_MoBoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Max RAM]", Storage="_Max_RAM", DbType="Int")]
		public System.Nullable<int> Max_RAM
		{
			get
			{
				return this._Max_RAM;
			}
			set
			{
				if ((this._Max_RAM != value))
				{
					this.OnMax_RAMChanging(value);
					this.SendPropertyChanging();
					this._Max_RAM = value;
					this.SendPropertyChanged("Max_RAM");
					this.OnMax_RAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[SATA 6 Gb/s]", Storage="_SATA_6_Gb_s", DbType="Int")]
		public System.Nullable<int> SATA_6_Gb_s
		{
			get
			{
				return this._SATA_6_Gb_s;
			}
			set
			{
				if ((this._SATA_6_Gb_s != value))
				{
					this.OnSATA_6_Gb_sChanging(value);
					this.SendPropertyChanging();
					this._SATA_6_Gb_s = value;
					this.SendPropertyChanged("SATA_6_Gb_s");
					this.OnSATA_6_Gb_sChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[M.2 Slots]", Storage="_M_2_Slots", DbType="Int")]
		public System.Nullable<int> M_2_Slots
		{
			get
			{
				return this._M_2_Slots;
			}
			set
			{
				if ((this._M_2_Slots != value))
				{
					this.OnM_2_SlotsChanging(value);
					this.SendPropertyChanging();
					this._M_2_Slots = value;
					this.SendPropertyChanged("M_2_Slots");
					this.OnM_2_SlotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoBo_Price", DbType="Float")]
		public System.Nullable<double> MoBo_Price
		{
			get
			{
				return this._MoBo_Price;
			}
			set
			{
				if ((this._MoBo_Price != value))
				{
					this.OnMoBo_PriceChanging(value);
					this.SendPropertyChanging();
					this._MoBo_Price = value;
					this.SendPropertyChanged("MoBo_Price");
					this.OnMoBo_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobo_Picture", DbType="VarChar(50)")]
		public string Mobo_Picture
		{
			get
			{
				return this._Mobo_Picture;
			}
			set
			{
				if ((this._Mobo_Picture != value))
				{
					this.OnMobo_PictureChanging(value);
					this.SendPropertyChanging();
					this._Mobo_Picture = value;
					this.SendPropertyChanged("Mobo_Picture");
					this.OnMobo_PictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MotherBoard_BUILD", Storage="_BUILDs", ThisKey="MoBo_ID", OtherKey="MoBo_ID")]
		public EntitySet<BUILD> BUILDs
		{
			get
			{
				return this._BUILDs;
			}
			set
			{
				this._BUILDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BUILDs(BUILD entity)
		{
			this.SendPropertyChanging();
			entity.MotherBoard = this;
		}
		
		private void detach_BUILDs(BUILD entity)
		{
			this.SendPropertyChanging();
			entity.MotherBoard = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PowerSupply")]
	public partial class PowerSupply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PowerSupply_ID;
		
		private string _Manufacturer_Psu;
		
		private string _Form_Factor_Psu;
		
		private string _Efficiency_Rating;
		
		private System.Nullable<int> _Wattage;
		
		private string _Modular;
		
		private System.Nullable<double> _Psu_Price;
		
		private string _Psu_Picture;
		
		private EntitySet<BUILD> _BUILDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPowerSupply_IDChanging(string value);
    partial void OnPowerSupply_IDChanged();
    partial void OnManufacturer_PsuChanging(string value);
    partial void OnManufacturer_PsuChanged();
    partial void OnForm_Factor_PsuChanging(string value);
    partial void OnForm_Factor_PsuChanged();
    partial void OnEfficiency_RatingChanging(string value);
    partial void OnEfficiency_RatingChanged();
    partial void OnWattageChanging(System.Nullable<int> value);
    partial void OnWattageChanged();
    partial void OnModularChanging(string value);
    partial void OnModularChanged();
    partial void OnPsu_PriceChanging(System.Nullable<double> value);
    partial void OnPsu_PriceChanged();
    partial void OnPsu_PictureChanging(string value);
    partial void OnPsu_PictureChanged();
    #endregion
		
		public PowerSupply()
		{
			this._BUILDs = new EntitySet<BUILD>(new Action<BUILD>(this.attach_BUILDs), new Action<BUILD>(this.detach_BUILDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerSupply_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PowerSupply_ID
		{
			get
			{
				return this._PowerSupply_ID;
			}
			set
			{
				if ((this._PowerSupply_ID != value))
				{
					this.OnPowerSupply_IDChanging(value);
					this.SendPropertyChanging();
					this._PowerSupply_ID = value;
					this.SendPropertyChanged("PowerSupply_ID");
					this.OnPowerSupply_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer_Psu", DbType="VarChar(50)")]
		public string Manufacturer_Psu
		{
			get
			{
				return this._Manufacturer_Psu;
			}
			set
			{
				if ((this._Manufacturer_Psu != value))
				{
					this.OnManufacturer_PsuChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer_Psu = value;
					this.SendPropertyChanged("Manufacturer_Psu");
					this.OnManufacturer_PsuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Form Factor_Psu]", Storage="_Form_Factor_Psu", DbType="VarChar(20)")]
		public string Form_Factor_Psu
		{
			get
			{
				return this._Form_Factor_Psu;
			}
			set
			{
				if ((this._Form_Factor_Psu != value))
				{
					this.OnForm_Factor_PsuChanging(value);
					this.SendPropertyChanging();
					this._Form_Factor_Psu = value;
					this.SendPropertyChanged("Form_Factor_Psu");
					this.OnForm_Factor_PsuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Efficiency Rating]", Storage="_Efficiency_Rating", DbType="VarChar(40)")]
		public string Efficiency_Rating
		{
			get
			{
				return this._Efficiency_Rating;
			}
			set
			{
				if ((this._Efficiency_Rating != value))
				{
					this.OnEfficiency_RatingChanging(value);
					this.SendPropertyChanging();
					this._Efficiency_Rating = value;
					this.SendPropertyChanged("Efficiency_Rating");
					this.OnEfficiency_RatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wattage", DbType="Int")]
		public System.Nullable<int> Wattage
		{
			get
			{
				return this._Wattage;
			}
			set
			{
				if ((this._Wattage != value))
				{
					this.OnWattageChanging(value);
					this.SendPropertyChanging();
					this._Wattage = value;
					this.SendPropertyChanged("Wattage");
					this.OnWattageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modular", DbType="VarChar(20)")]
		public string Modular
		{
			get
			{
				return this._Modular;
			}
			set
			{
				if ((this._Modular != value))
				{
					this.OnModularChanging(value);
					this.SendPropertyChanging();
					this._Modular = value;
					this.SendPropertyChanged("Modular");
					this.OnModularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Psu_Price", DbType="Float")]
		public System.Nullable<double> Psu_Price
		{
			get
			{
				return this._Psu_Price;
			}
			set
			{
				if ((this._Psu_Price != value))
				{
					this.OnPsu_PriceChanging(value);
					this.SendPropertyChanging();
					this._Psu_Price = value;
					this.SendPropertyChanged("Psu_Price");
					this.OnPsu_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Psu_Picture", DbType="VarChar(50)")]
		public string Psu_Picture
		{
			get
			{
				return this._Psu_Picture;
			}
			set
			{
				if ((this._Psu_Picture != value))
				{
					this.OnPsu_PictureChanging(value);
					this.SendPropertyChanging();
					this._Psu_Picture = value;
					this.SendPropertyChanged("Psu_Picture");
					this.OnPsu_PictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PowerSupply_BUILD", Storage="_BUILDs", ThisKey="PowerSupply_ID", OtherKey="PowerSupply_ID")]
		public EntitySet<BUILD> BUILDs
		{
			get
			{
				return this._BUILDs;
			}
			set
			{
				this._BUILDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BUILDs(BUILD entity)
		{
			this.SendPropertyChanging();
			entity.PowerSupply = this;
		}
		
		private void detach_BUILDs(BUILD entity)
		{
			this.SendPropertyChanging();
			entity.PowerSupply = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Select_Gpu")]
	public partial class Select_Gpu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Gpu_ID;
		
		private int _Build_ID;
		
		private EntityRef<BUILD> _BUILD;
		
		private EntityRef<Gpu> _Gpu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGpu_IDChanging(string value);
    partial void OnGpu_IDChanged();
    partial void OnBuild_IDChanging(int value);
    partial void OnBuild_IDChanged();
    #endregion
		
		public Select_Gpu()
		{
			this._BUILD = default(EntityRef<BUILD>);
			this._Gpu = default(EntityRef<Gpu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gpu_ID", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Gpu_ID
		{
			get
			{
				return this._Gpu_ID;
			}
			set
			{
				if ((this._Gpu_ID != value))
				{
					if (this._Gpu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGpu_IDChanging(value);
					this.SendPropertyChanging();
					this._Gpu_ID = value;
					this.SendPropertyChanged("Gpu_ID");
					this.OnGpu_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Build_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Build_ID
		{
			get
			{
				return this._Build_ID;
			}
			set
			{
				if ((this._Build_ID != value))
				{
					if (this._BUILD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuild_IDChanging(value);
					this.SendPropertyChanging();
					this._Build_ID = value;
					this.SendPropertyChanged("Build_ID");
					this.OnBuild_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUILD_Select_Gpu", Storage="_BUILD", ThisKey="Build_ID", OtherKey="Build_ID", IsForeignKey=true)]
		public BUILD BUILD
		{
			get
			{
				return this._BUILD.Entity;
			}
			set
			{
				BUILD previousValue = this._BUILD.Entity;
				if (((previousValue != value) 
							|| (this._BUILD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BUILD.Entity = null;
						previousValue.Select_Gpus.Remove(this);
					}
					this._BUILD.Entity = value;
					if ((value != null))
					{
						value.Select_Gpus.Add(this);
						this._Build_ID = value.Build_ID;
					}
					else
					{
						this._Build_ID = default(int);
					}
					this.SendPropertyChanged("BUILD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gpu_Select_Gpu", Storage="_Gpu", ThisKey="Gpu_ID", OtherKey="Gpu_ID", IsForeignKey=true)]
		public Gpu Gpu
		{
			get
			{
				return this._Gpu.Entity;
			}
			set
			{
				Gpu previousValue = this._Gpu.Entity;
				if (((previousValue != value) 
							|| (this._Gpu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gpu.Entity = null;
						previousValue.Select_Gpus.Remove(this);
					}
					this._Gpu.Entity = value;
					if ((value != null))
					{
						value.Select_Gpus.Add(this);
						this._Gpu_ID = value.Gpu_ID;
					}
					else
					{
						this._Gpu_ID = default(string);
					}
					this.SendPropertyChanged("Gpu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Select_Memory")]
	public partial class Select_Memory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Build_ID;
		
		private string _Memory_ID;
		
		private EntityRef<BUILD> _BUILD;
		
		private EntityRef<Memory> _Memory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuild_IDChanging(int value);
    partial void OnBuild_IDChanged();
    partial void OnMemory_IDChanging(string value);
    partial void OnMemory_IDChanged();
    #endregion
		
		public Select_Memory()
		{
			this._BUILD = default(EntityRef<BUILD>);
			this._Memory = default(EntityRef<Memory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Build_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Build_ID
		{
			get
			{
				return this._Build_ID;
			}
			set
			{
				if ((this._Build_ID != value))
				{
					if (this._BUILD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuild_IDChanging(value);
					this.SendPropertyChanging();
					this._Build_ID = value;
					this.SendPropertyChanged("Build_ID");
					this.OnBuild_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memory_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Memory_ID
		{
			get
			{
				return this._Memory_ID;
			}
			set
			{
				if ((this._Memory_ID != value))
				{
					if (this._Memory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemory_IDChanging(value);
					this.SendPropertyChanging();
					this._Memory_ID = value;
					this.SendPropertyChanged("Memory_ID");
					this.OnMemory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUILD_Select_Memory", Storage="_BUILD", ThisKey="Build_ID", OtherKey="Build_ID", IsForeignKey=true)]
		public BUILD BUILD
		{
			get
			{
				return this._BUILD.Entity;
			}
			set
			{
				BUILD previousValue = this._BUILD.Entity;
				if (((previousValue != value) 
							|| (this._BUILD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BUILD.Entity = null;
						previousValue.Select_Memories.Remove(this);
					}
					this._BUILD.Entity = value;
					if ((value != null))
					{
						value.Select_Memories.Add(this);
						this._Build_ID = value.Build_ID;
					}
					else
					{
						this._Build_ID = default(int);
					}
					this.SendPropertyChanged("BUILD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Memory_Select_Memory", Storage="_Memory", ThisKey="Memory_ID", OtherKey="Memory_ID", IsForeignKey=true)]
		public Memory Memory
		{
			get
			{
				return this._Memory.Entity;
			}
			set
			{
				Memory previousValue = this._Memory.Entity;
				if (((previousValue != value) 
							|| (this._Memory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Memory.Entity = null;
						previousValue.Select_Memories.Remove(this);
					}
					this._Memory.Entity = value;
					if ((value != null))
					{
						value.Select_Memories.Add(this);
						this._Memory_ID = value.Memory_ID;
					}
					else
					{
						this._Memory_ID = default(string);
					}
					this.SendPropertyChanged("Memory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Select_Storage")]
	public partial class Select_Storage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Build_ID;
		
		private string _Storage_ID;
		
		private EntityRef<BUILD> _BUILD;
		
		private EntityRef<Storage> _Storage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuild_IDChanging(int value);
    partial void OnBuild_IDChanged();
    partial void OnStorage_IDChanging(string value);
    partial void OnStorage_IDChanged();
    #endregion
		
		public Select_Storage()
		{
			this._BUILD = default(EntityRef<BUILD>);
			this._Storage = default(EntityRef<Storage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Build_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Build_ID
		{
			get
			{
				return this._Build_ID;
			}
			set
			{
				if ((this._Build_ID != value))
				{
					if (this._BUILD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuild_IDChanging(value);
					this.SendPropertyChanging();
					this._Build_ID = value;
					this.SendPropertyChanged("Build_ID");
					this.OnBuild_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Storage_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Storage_ID
		{
			get
			{
				return this._Storage_ID;
			}
			set
			{
				if ((this._Storage_ID != value))
				{
					if (this._Storage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorage_IDChanging(value);
					this.SendPropertyChanging();
					this._Storage_ID = value;
					this.SendPropertyChanged("Storage_ID");
					this.OnStorage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUILD_Select_Storage", Storage="_BUILD", ThisKey="Build_ID", OtherKey="Build_ID", IsForeignKey=true)]
		public BUILD BUILD
		{
			get
			{
				return this._BUILD.Entity;
			}
			set
			{
				BUILD previousValue = this._BUILD.Entity;
				if (((previousValue != value) 
							|| (this._BUILD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BUILD.Entity = null;
						previousValue.Select_Storages.Remove(this);
					}
					this._BUILD.Entity = value;
					if ((value != null))
					{
						value.Select_Storages.Add(this);
						this._Build_ID = value.Build_ID;
					}
					else
					{
						this._Build_ID = default(int);
					}
					this.SendPropertyChanged("BUILD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Storage_Select_Storage", Storage="_Storage", ThisKey="Storage_ID", OtherKey="Storage_ID", IsForeignKey=true)]
		public Storage Storage
		{
			get
			{
				return this._Storage.Entity;
			}
			set
			{
				Storage previousValue = this._Storage.Entity;
				if (((previousValue != value) 
							|| (this._Storage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Storage.Entity = null;
						previousValue.Select_Storages.Remove(this);
					}
					this._Storage.Entity = value;
					if ((value != null))
					{
						value.Select_Storages.Add(this);
						this._Storage_ID = value.Storage_ID;
					}
					else
					{
						this._Storage_ID = default(string);
					}
					this.SendPropertyChanged("Storage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Storage")]
	public partial class Storage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Storage_ID;
		
		private string _Manufacturer_Storage;
		
		private System.Nullable<int> _Capacity_storage;
		
		private string _Type_Storage;
		
		private string _Form_Factor_Storage;
		
		private string _Interface_strg;
		
		private System.Nullable<short> _NVME;
		
		private System.Nullable<double> _Storage_Price;
		
		private string _Storage_Picture;
		
		private EntitySet<Select_Storage> _Select_Storages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStorage_IDChanging(string value);
    partial void OnStorage_IDChanged();
    partial void OnManufacturer_StorageChanging(string value);
    partial void OnManufacturer_StorageChanged();
    partial void OnCapacity_storageChanging(System.Nullable<int> value);
    partial void OnCapacity_storageChanged();
    partial void OnType_StorageChanging(string value);
    partial void OnType_StorageChanged();
    partial void OnForm_Factor_StorageChanging(string value);
    partial void OnForm_Factor_StorageChanged();
    partial void OnInterface_strgChanging(string value);
    partial void OnInterface_strgChanged();
    partial void OnNVMEChanging(System.Nullable<short> value);
    partial void OnNVMEChanged();
    partial void OnStorage_PriceChanging(System.Nullable<double> value);
    partial void OnStorage_PriceChanged();
    partial void OnStorage_PictureChanging(string value);
    partial void OnStorage_PictureChanged();
    #endregion
		
		public Storage()
		{
			this._Select_Storages = new EntitySet<Select_Storage>(new Action<Select_Storage>(this.attach_Select_Storages), new Action<Select_Storage>(this.detach_Select_Storages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Storage_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Storage_ID
		{
			get
			{
				return this._Storage_ID;
			}
			set
			{
				if ((this._Storage_ID != value))
				{
					this.OnStorage_IDChanging(value);
					this.SendPropertyChanging();
					this._Storage_ID = value;
					this.SendPropertyChanged("Storage_ID");
					this.OnStorage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer_Storage", DbType="VarChar(50)")]
		public string Manufacturer_Storage
		{
			get
			{
				return this._Manufacturer_Storage;
			}
			set
			{
				if ((this._Manufacturer_Storage != value))
				{
					this.OnManufacturer_StorageChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer_Storage = value;
					this.SendPropertyChanged("Manufacturer_Storage");
					this.OnManufacturer_StorageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity_storage", DbType="Int")]
		public System.Nullable<int> Capacity_storage
		{
			get
			{
				return this._Capacity_storage;
			}
			set
			{
				if ((this._Capacity_storage != value))
				{
					this.OnCapacity_storageChanging(value);
					this.SendPropertyChanging();
					this._Capacity_storage = value;
					this.SendPropertyChanged("Capacity_storage");
					this.OnCapacity_storageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Storage", DbType="VarChar(20)")]
		public string Type_Storage
		{
			get
			{
				return this._Type_Storage;
			}
			set
			{
				if ((this._Type_Storage != value))
				{
					this.OnType_StorageChanging(value);
					this.SendPropertyChanging();
					this._Type_Storage = value;
					this.SendPropertyChanged("Type_Storage");
					this.OnType_StorageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Form Factor_Storage]", Storage="_Form_Factor_Storage", DbType="VarChar(20)")]
		public string Form_Factor_Storage
		{
			get
			{
				return this._Form_Factor_Storage;
			}
			set
			{
				if ((this._Form_Factor_Storage != value))
				{
					this.OnForm_Factor_StorageChanging(value);
					this.SendPropertyChanging();
					this._Form_Factor_Storage = value;
					this.SendPropertyChanged("Form_Factor_Storage");
					this.OnForm_Factor_StorageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interface_strg", DbType="VarChar(20)")]
		public string Interface_strg
		{
			get
			{
				return this._Interface_strg;
			}
			set
			{
				if ((this._Interface_strg != value))
				{
					this.OnInterface_strgChanging(value);
					this.SendPropertyChanging();
					this._Interface_strg = value;
					this.SendPropertyChanged("Interface_strg");
					this.OnInterface_strgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NVME", DbType="SmallInt")]
		public System.Nullable<short> NVME
		{
			get
			{
				return this._NVME;
			}
			set
			{
				if ((this._NVME != value))
				{
					this.OnNVMEChanging(value);
					this.SendPropertyChanging();
					this._NVME = value;
					this.SendPropertyChanged("NVME");
					this.OnNVMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Storage_Price", DbType="Float")]
		public System.Nullable<double> Storage_Price
		{
			get
			{
				return this._Storage_Price;
			}
			set
			{
				if ((this._Storage_Price != value))
				{
					this.OnStorage_PriceChanging(value);
					this.SendPropertyChanging();
					this._Storage_Price = value;
					this.SendPropertyChanged("Storage_Price");
					this.OnStorage_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Storage_Picture", DbType="VarChar(50)")]
		public string Storage_Picture
		{
			get
			{
				return this._Storage_Picture;
			}
			set
			{
				if ((this._Storage_Picture != value))
				{
					this.OnStorage_PictureChanging(value);
					this.SendPropertyChanging();
					this._Storage_Picture = value;
					this.SendPropertyChanged("Storage_Picture");
					this.OnStorage_PictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Storage_Select_Storage", Storage="_Select_Storages", ThisKey="Storage_ID", OtherKey="Storage_ID")]
		public EntitySet<Select_Storage> Select_Storages
		{
			get
			{
				return this._Select_Storages;
			}
			set
			{
				this._Select_Storages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Select_Storages(Select_Storage entity)
		{
			this.SendPropertyChanging();
			entity.Storage = this;
		}
		
		private void detach_Select_Storages(Select_Storage entity)
		{
			this.SendPropertyChanging();
			entity.Storage = null;
		}
	}
}
#pragma warning restore 1591
